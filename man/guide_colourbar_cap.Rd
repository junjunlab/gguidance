% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/guide_colourbar_cap.R
\name{guide_colourbar_cap}
\alias{guide_colourbar_cap}
\alias{guide_colorbar_cap}
\title{Capped colour bar guide}
\usage{
guide_colourbar_cap(
  cap_shape = "triangle",
  cap_size = NULL,
  cap_position = "both",
  ...
)

guide_colorbar_cap(
  cap_shape = "triangle",
  cap_size = NULL,
  cap_position = "both",
  ...
)
}
\arguments{
\item{cap_shape}{A \code{character(1)} indicating the shape of the cap. Can be one
of \code{"triangle"} (default), \code{"round"} or \code{"arched"}.}

\item{cap_size}{A \code{\link[grid:unit]{<unit>}} object setting the size of the
cap. If \code{NULL} (default), an appropriate size is chosen according to the
\code{cap_shape} and \verb{bar\{width/height\}} argument.}

\item{cap_position}{A \code{character(1)} indicating on which end of the colour
bar to display the cap(s). Can be one of \code{"lower"}, \code{"upper"} or \code{"both"}.}

\item{...}{
  Arguments passed on to \code{\link[ggplot2:guide_colourbar]{ggplot2::guide_colourbar}}
  \describe{
    \item{\code{title}}{A character string or expression indicating a title of guide.
If \code{NULL}, the title is not shown. By default
(\code{\link[ggplot2:waiver]{waiver()}}), the name of the scale object or the name
specified in \code{\link[ggplot2:labs]{labs()}} is used for the title.}
    \item{\code{title.position}}{A character string indicating the position of a
title. One of "top" (default for a vertical guide), "bottom", "left"
(default for a horizontal guide), or "right."}
    \item{\code{title.theme}}{A theme object for rendering the title text. Usually the
object of \code{\link[ggplot2:element_text]{element_text()}} is expected. By default, the theme is
specified by \code{legend.title} in \code{\link[ggplot2:theme]{theme()}} or theme.}
    \item{\code{title.hjust}}{A number specifying horizontal justification of the
title text.}
    \item{\code{title.vjust}}{A number specifying vertical justification of the title
text.}
    \item{\code{label}}{logical. If \code{TRUE} then the labels are drawn. If
\code{FALSE} then the labels are invisible.}
    \item{\code{label.position}}{A character string indicating the position of a
label. One of "top", "bottom" (default for horizontal guide), "left", or
"right" (default for vertical guide).}
    \item{\code{label.theme}}{A theme object for rendering the label text. Usually the
object of \code{\link[ggplot2:element_text]{element_text()}} is expected. By default, the theme is
specified by \code{legend.text} in \code{\link[ggplot2:theme]{theme()}}.}
    \item{\code{label.hjust}}{A numeric specifying horizontal justification of the
label text. The default for standard text is 0 (left-aligned) and 1
(right-aligned) for expressions.}
    \item{\code{label.vjust}}{A numeric specifying vertical justification of the label
text.}
    \item{\code{barwidth}}{A numeric or a \code{\link[grid:unit]{grid::unit()}} object specifying
the width of the colourbar. Default value is \code{legend.key.width} or
\code{legend.key.size} in \code{\link[ggplot2:theme]{theme()}} or theme.}
    \item{\code{barheight}}{A numeric or a \code{\link[grid:unit]{grid::unit()}} object specifying
the height of the colourbar. Default value is \code{legend.key.height} or
\code{legend.key.size} in \code{\link[ggplot2:theme]{theme()}} or theme.}
    \item{\code{nbin}}{A numeric specifying the number of bins for drawing the
colourbar. A smoother colourbar results from a larger value.}
    \item{\code{raster}}{A logical. If \code{TRUE} then the colourbar is rendered as a
raster object. If \code{FALSE} then the colourbar is rendered as a set of
rectangles. Note that not all graphics devices are capable of rendering
raster image.}
    \item{\code{frame}}{A theme object for rendering a frame drawn around the bar.
Usually, the object of \code{element_rect()} is expected. If \code{element_blank()}
(default), no frame is drawn.}
    \item{\code{frame.colour}}{A string specifying the colour of the frame
drawn around the bar. For backward compatibility, if this argument is
not \code{NULL}, the \code{frame} argument will be set to \code{element_rect()}.}
    \item{\code{frame.linewidth}}{A numeric specifying the width of the frame
drawn around the bar in millimetres.}
    \item{\code{frame.linetype}}{A numeric specifying the linetype of the frame
drawn around the bar.}
    \item{\code{ticks}}{A theme object for rendering tick marks at the colourbar.
Usually, the object of \code{element_line()} is expected (default). If
\code{element_blank()}, no tick marks are drawn. For backward compatibility,
can also be a logical which translates \code{TRUE} to \code{element_line()} and
\code{FALSE} to \code{element_blank()}.}
    \item{\code{ticks.colour}}{A string specifying the colour of the tick marks.}
    \item{\code{ticks.linewidth}}{A numeric specifying the width of the tick marks in
millimetres.}
    \item{\code{ticks.length}}{A numeric or a \code{\link[grid:unit]{grid::unit()}} object specifying the
length of tick marks at the colourbar.}
    \item{\code{draw.ulim}}{A logical specifying if the upper limit tick marks should
be visible.}
    \item{\code{draw.llim}}{A logical specifying if the lower limit tick marks should
be visible.}
    \item{\code{direction}}{A character string indicating the direction of the guide.
One of "horizontal" or "vertical."}
    \item{\code{default.unit}}{A character string indicating \code{\link[grid:unit]{grid::unit()}}
for \code{barwidth} and \code{barheight}.}
    \item{\code{reverse}}{logical. If \code{TRUE} the colourbar is reversed. By default,
the highest value is on the top and the lowest value is on the bottom}
    \item{\code{order}}{positive integer less than 99 that specifies the order of
this guide among multiple guides. This controls the order in which
multiple guides are displayed, not the contents of the guide itself.
If 0 (default), the order is determined by a secret algorithm.}
    \item{\code{available_aes}}{A vector of character strings listing the aesthetics
for which a colourbar can be drawn.}
  }}
}
\value{
A \verb{<Guide>} ggproto object that can be given to the
\code{\link[ggplot2:guides]{guides()}} function, or set as the \code{guide} argument
in a colour or fill scale.
}
\description{
Like regular colour bar guides, this capped colour bar guide also shows
continuous colour scales mapped to values. In addition, this guide allows
you to 'cap' the ends of the colour bar, which can serve as visual indicators
of scale \link[scales:oob]{squishing}. The cap itself will be filled
with the colours at the extremes.
}
\examples{
# A standard plot with continuous colour scale
p <- ggplot(mpg, aes(displ, hwy)) +
  geom_point(aes(colour = cty)) +
  scale_colour_viridis_c()

# By default, the bar is capped by equilateral triangles
p + guides(colour = guide_colourbar_cap())

# This can be changed by setting a different cap shape
p + guides(colour = guide_colourbar_cap(cap_shape = "arched"))

# To cap just one end, use the `cap_position` argument
p + guides(colour = guide_colourbar_cap(cap_position = "upper"))

# The `cap_size` argument can be used to stretch or squish the cap
p + guides(colour = guide_colourbar_cap(cap_size  = unit(1, "cm"),
                                        cap_shape = "round"))
}
\seealso{
Other colour bar variants: 
\code{\link{guide_colour_violin}()}
}
\concept{colour bar variants}
