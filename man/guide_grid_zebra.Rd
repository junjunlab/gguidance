% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/guide_grid_zebra.R
\name{guide_grid_zebra}
\alias{guide_grid_zebra}
\title{Zebra grid}
\usage{
guide_grid_zebra(
  direction = "x",
  rect = element_rect(),
  rect_x = NULL,
  rect_y = NULL,
  at = "major",
  at_x = NULL,
  at_y = NULL,
  odd = TRUE,
  odd_x = NULL,
  odd_y = NULL,
  breaks = waiver(),
  x_breaks = waiver(),
  y_breaks = waiver(),
  ...
)
}
\arguments{
\item{direction}{Either \code{"x"} or \code{"y"} or \code{"both"} indicating in which
direction the zebra stripes should be drawn. If not \code{"both"}, the
orthogonal direction will have regular grid lines.}

\item{rect}{An \code{element_rect} or \code{element_blank} object to display the zebra
stripes. Internally inherits from the \code{panel.grid.major} theme setting,
where the line's \code{colour} field becomes the rectangle's \code{fill} field.}

\item{rect_x, rect_y}{Inherits from the \code{rect} argument, but for the x and y
directions respectively.}

\item{at}{One of \code{"major"} (default), \code{"minor"} or \code{"both"} indicating
between which breaks to display stripes.}

\item{at_x, at_y}{Inherits from the \code{at} argument, but for the x and y
directions respectively.}

\item{odd}{A \code{logical(1)} whether to fill the odd stripes (\code{TRUE}, default)
or the even stripes (\code{FALSE}).}

\item{odd_x, odd_y}{Inherits from the \code{odd} argument, but for the x and y
directions respectively.}

\item{breaks}{The default major breaks specification inherited by the
\code{x_breaks} and \code{y_breaks} arguments.}

\item{x_breaks, y_breaks}{Specifications for major breaks.
Inherits from the \code{breaks} argument. One of:
\itemize{
\item \code{NULL} for no breaks.
\item \code{waiver()} for default breaks computed by the scale.
\item A \code{numeric} vector for positions. For discrete scales, can also be a
\code{character} vector.
\item A \code{function} that takes the limits as input and returns breaks as
output. Also accepts \link[rlang:as_function]{lambda} function notation.
}}

\item{...}{
  Arguments passed on to \code{\link[=guide_grid]{guide_grid}}
  \describe{
    \item{\code{minor_breaks}}{The default minor breaks specification inherited by the
\code{x_minor_breaks} and \code{y_minor_breaks} arguments.}
    \item{\code{x_minor_breaks,y_minor_breaks}}{Specifications of minor breaks. Inherits
from the \code{minor_breaks} argument. One of:
\itemize{
\item \code{NULL} for no minor breaks.
\item \code{waiver()} for default minor breaks computed by the scale.
\item A \code{numeric} vector for positions. For discrete scales, can also be a
\code{character} vector.
\item A \code{function} that takes the limits as input and returns a vector of minor
breaks as output. Also accepts \link[rlang:as_function]{lambda} function
notation.
}}
  }}
}
\value{
A \verb{<Guide>} ggproto object that can be given to the
\code{\link[ggplot2:guides]{guides()}} function, or set as the \code{guide} argument
in \code{\link[=coord_guided]{coord_guided()}}.
}
\description{
This guide will draw the panel grid as alternating stripes, resembling the
stripes of a zebra, like the pedestrian crosswalk.
}
\details{
For discrete scales, the function internally default to placing the major
breaks in the \code{direction} dimension in between levels. To restore classic
major breaks at discrete scales, one can set the relevant
\verb{breaks_\{x/y\} = seq_along}.
}
\examples{
# A standard plot
p <- ggplot(economics, aes(date, unemploy)) +
  geom_line()

# Adding a zebra grid
p + coord_guided(guide = "grid_zebra")

# Filling the even stripes
p + coord_guided(guide = guide_grid_zebra(odd = FALSE))

# Including the minor breaks for zebra stripes
p + coord_guided(guide = guide_grid_zebra(at = "minor"))

# Customising the look of the stripes
p + coord_guided(guide = guide_grid_zebra(
  rect = element_rect(fill = "grey95", colour = "white", linetype = "dotted")
))

# Using zebra stripes as a gingham pattern
p + coord_guided(guide = guide_grid_zebra(direction = 'both', at = "minor")) +
  theme(panel.grid.major = element_line(colour = alpha("white", 0.5)))
}
\seealso{
Other grid guide variants: 
\code{\link{guide_grid_plus}()},
\code{\link{guide_grid}()}
}
\concept{grid guide variants}
