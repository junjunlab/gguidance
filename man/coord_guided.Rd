% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/coord_guided.R
\name{coord_guided}
\alias{coord_guided}
\title{Cartesian coordinates with grid guides.}
\usage{
coord_guided(
  guide = guide_grid_vanilla(),
  xlim = NULL,
  ylim = NULL,
  ratio = NULL,
  expand = TRUE,
  clip = "on",
  default = FALSE
)
}
\arguments{
\item{guide}{A \verb{<GuideGrid>} object giving a guide to draw the grid with. Can
be constructed using functions listed in the 'See Also' section.}

\item{xlim, ylim}{Limits for the x and y axes.}

\item{ratio}{Either \code{NULL} (default) or \code{numeric(1)}. If \code{numeric(1)}, locks
the aspect ratio of panels, expressed as \code{y / x}.}

\item{expand}{If \code{TRUE}, the default, adds a small expansion factor to
the limits to ensure that data and axes don't overlap. If \code{FALSE},
limits are taken exactly from the data or \code{xlim}/\code{ylim}.}

\item{clip}{Should drawing be clipped to the extent of the plot panel? A
setting of \code{"on"} (the default) means yes, and a setting of \code{"off"}
means no. In most cases, the default of \code{"on"} should not be changed,
as setting \code{clip = "off"} can cause unexpected results. It allows
drawing of data points anywhere on the plot, including in the plot margins. If
limits are set via \code{xlim} and \code{ylim} and some data points fall outside those
limits, then those data points may show up in places such as the axes, the
legend, the plot title, or the plot margins.}

\item{default}{Is this the default coordinate system? If \code{FALSE} (the default),
then replacing this coordinate system with another one creates a message alerting
the user that the coordinate system is being replaced. If \code{TRUE}, that warning
is suppressed.}
}
\value{
A \verb{<Coord>} ggproto object that can be added to a plot.
}
\description{
This coordinate system offers the additional flexibility of being able to set
a guide for the panel grid.
}
\examples{
# Either choose a guide by name...
ggplot(mpg, aes(displ, hwy)) +
  geom_point() +
  coord_guided(guide = "grid_zebra")

# ... or using a constructor
ggplot(mpg, aes(displ, hwy)) +
  geom_point() +
  coord_guided(guide = guide_grid_zebra())
}
\seealso{
Constructors: \code{\link[=guide_grid_vanilla]{guide_grid_vanilla()}}, \code{\link[=guide_grid_zebra]{guide_grid_zebra()}}.
}
